apiVersion: kubeflow.org/v1alpha1
kind: MPIJob
metadata:
  name: {{ .Values.global.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.global.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  gpus: {{ .Values.maskrcnn.gpus }}
  template:
    spec:
      restartPolicy: Never
      volumes:
      - name: {{ .Values.maskrcnn.shared_fs }}
        persistentVolumeClaim:
            claimName: {{ .Values.maskrcnn.shared_pvc }}
      - name: ebs
        hostPath:
            path: /ebs
            type: DirectoryOrCreate
      containers:
      - name: {{ .Values.global.name }}
        env:
        - name: HOROVOD_CYCLE_TIME
          value: "{{ .Values.maskrcnn.horovod_cycle_time }}"
        - name: HOROVOD_FUSION_THRESHOLD
          value: "{{ .Values.maskrcnn.horovod_fusion_threshold }}"
        - name: NCCL_SOCKET_IFNAME
          value: "{{ .Values.maskrcnn.nccl_socket_ifname }}"
        - name: NCCL_MIN_NRINGS
          value: "{{ .Values.maskrcnn.nccl_min_rings }}"
        - name: NCCL_DEBUG
          value: "{{ .Values.maskrcnn.nccl_debug }}"
        - name: TENSORPACK_FP16
          value: "{{ .Values.maskrcnn.fp_16 }}"
        command:
        - mpirun
        workingDir: {{ .Values.maskrcnn.working_dir }}
        args:
        - --output-filename
        - /{{ .Values.maskrcnn.shared_fs }}/logs/{{ .Values.maskrcnn.experiment_group }}/{{ .Release.Name }}
        - --allow-run-as-root
        - --display-map
        - --tag-output
        - --timestamp-output
        - python3
        - {{ .Values.maskrcnn.train_script }}
        - --logdir
        - /{{ .Values.maskrcnn.shared_fs }}/logs/{{ .Values.maskrcnn.experiment_group }}/{{ .Release.Name }}/train_log/
        - --fp16
        - --images_per_epoch
        - "{{ .Values.maskrcnn.images_per_epoch }}"
        - --config
        - MODE_MASK={{ .Values.maskrcnn.mode_fpn }}
        - MODE_FPN={{ .Values.maskrcnn.mode_mask }}
        - DATA.BASEDIR=/{{ .Values.maskrcnn.data_fs }}/{{ .Values.maskrcnn.data_dir }}
        - DATA.TRAIN={{ .Values.maskrcnn.data_train }}
        - DATA.VAL={{ .Values.maskrcnn.data_val }}
        - TRAIN.GRADIENT_CLIP={{ .Values.maskrcnn.gradient_clip }}
        - TRAIN.BATCH_SIZE_PER_GPU={{ .Values.maskrcnn.batch_size_per_gpu }}
        - TRAIN.EVAL_PERIOD={{ .Values.maskrcnn.eval_period_in_epochs }}
        - TRAIN.BASE_LR={{ .Values.maskrcnn.base_lr }}
        - TRAIN.WARMUP_INIT_LR={{ .Values.maskrcnn.warmup_lr }}
        - TRAIN.LR_EPOCH_SCHEDULE={{ .Values.maskrcnn.lr_epoch_schedule }}
        - RPN.TOPK_PER_IMAGE={{ .Values.maskrcnn.topk_per_image }}
        - PREPROC.PREDEFINED_PADDING={{ .Values.maskrcnn.predefined_padding }}
        - FRCNN.BBOX_REG_WEIGHTS={{ .Values.maskrcnn.bbox_reg_weights }}
        - TEST.RESULT_SCORE_THRESH={{ .Values.maskrcnn.result_score_thresh }}
        - BACKBONE.WEIGHTS=/{{ .Values.maskrcnn.data_fs }}/{{ .Values.maskrcnn.backbone_weights }}
        - BACKBONE.NORM={{ .Values.maskrcnn.backbone_norm }}
        - TRAINER=horovod
        image: {{ .Values.maskrcnn.image }}
        imagePullPolicy: {{ .Values.maskrcnn.image_pull_policy }}
        volumeMounts:
        - mountPath: /{{ .Values.maskrcnn.shared_fs }}
          name: {{ .Values.maskrcnn.shared_fs }}
        - mountPath: /ebs
          name: ebs
        resources:
          limits:
            nvidia.com/gpu: {{ .Values.maskrcnn.gpus_per_node }}
